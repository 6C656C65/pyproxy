name: cicd

on: 
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  code-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install --no-cache-dir -U pip black flake8 bandit

      - name: Lint with flake8
        run: flake8 pyproxy tests benchmark

      - name: Check with black
        run: black --check pyproxy tests benchmark

      - name: Check with bandit
        run: bandit -r pyproxy tests benchmark

  unittest:
    needs: code-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install build dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Run tests
        run: python -m unittest discover -s tests

  build-docker:
    needs: unittest
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Get version from version.py
        id: get_version
        run: |
          VERSION=$(python -c "from pyproxy.utils.version import __version__; print(__version__)")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Docker tag version: $VERSION"

      - name: Convert repository owner to lowercase
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ env.REPO_OWNER }}/pyproxy:${{ env.VERSION }} -t ghcr.io/${{ env.REPO_OWNER }}/pyproxy:latest .
  
      - name: Build Docker slim image
        run: docker build -f Dockerfile.slim -t ghcr.io/${{ env.REPO_OWNER }}/pyproxy:${{ env.VERSION }}-slim -t ghcr.io/${{ env.REPO_OWNER }}/pyproxy:latest-slim .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.REPO_OWNER }}/pyproxy:${{ env.VERSION }}-slim
          docker push ghcr.io/${{ env.REPO_OWNER }}/pyproxy:latest-slim
          docker push ghcr.io/${{ env.REPO_OWNER }}/pyproxy:${{ env.VERSION }}
          docker push ghcr.io/${{ env.REPO_OWNER }}/pyproxy:latest